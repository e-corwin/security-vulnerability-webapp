from flask import Flask, render_template, request
import json
import os
import time
import datetime
from datetime import date
from datetime import datetime
from update_data import updateCVE
from update_data import updateCISA
from filtering_data import cveFiltering, cisaFiltering

app = Flask(__name__)
'''
@app.route('/postjson', methods = ['POST'])
def postJsonHandler():
    print(request.is_json)
    content = request.get_json()
    print(content)
    return 'JSON posted'
  
app.run(host='0.0.0.0', port= 8090)
'''
@app.route("/", methods=['GET', 'POST'])
def home():
    # Check modification data of cve-data-full.json to determine whether to update or not
    path = '/Users/eliscorwin/security-vulnerability-webapp/cve-data-full.json'
    modify_time = os.path.getmtime(path)
    convert_time = time.localtime(modify_time)
    format_time = time.strftime('%d%m%Y %H:%M:%S', convert_time)
    datetime_object = datetime.strptime(format_time, '%d%m%Y %H:%M:%S')
   
    today = datetime.now()
  
    last_mod_date = datetime_object.date()
    today_date = today.date()

    if last_mod_date < today_date: 
        print(last_mod_date, "is before" ,today_date)
        print("...UPDATING DATA")
        updateCISA()
        updateCVE()
        # pulling data
        with open(f"DATA-CVE.json", "w") as outfile:
            json.dump(DATA_CVE, outfile, indent = 2)
    
    f = open('/Users/eliscorwin/security-vulnerability-webapp/cve-data-full.json')
    DATA_CVE = json.load(f)
    f = open('/Users/eliscorwin/security-vulnerability-webapp/cisa-data-full.json')
    DATA_CISA = json.load(f)

    number = len(DATA_CISA['vulnerabilities'])
    print("Length of CISA data: ", number)
    cve_length = len(DATA_CVE['vulnerabilities'])
    print("Length of CVE data: ", cve_length)


    vendor_list= []
    i = 0
    while i < number:
        vendor = DATA_CISA['vulnerabilities'][i]['vendorProject']
        if vendor not in vendor_list:
            vendor_list.append(vendor)
        i = i + 1
    vendor_list = sorted(vendor_list, key=str.lower)

    form = request.method
    newest = request.args.get("time")
    severity = request.args.get("severity")
    vendor = request.args.get("vendor")
    print("Time input: ", newest)
    print("Severity input: ", severity)
    print("Vendor input: ", vendor)
    filter_list = [newest, severity, vendor]

    filtered_cve = cveFiltering(DATA_CVE, newest, severity, vendor)
    filtered_cisa = cisaFiltering(DATA_CISA, newest, severity, vendor)
    

    return render_template("home.html", vendors=vendor_list, filteredCVE=filtered_cve, filteredCISA=filtered_cisa, filters=filter_list)


if __name__ == "__main__":
    app.run(debug=True, port=8003)