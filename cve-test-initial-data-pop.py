import requests
import json
from datetime import datetime
from datetime import date 
from datetime import timedelta
import pytz

today = date.today()
yesterday = today - timedelta(days = 1)

time_us_central = datetime.now(pytz.timezone('US/Central'))
print('US Central DateTime: ', time_us_central)

iso_datetime_today = time_us_central.isoformat()
iso_datetime_yesterday = yesterday.strftime('%Y-%m-%dT%H:%M:%S.%f%z')
print('Today ISO Datetime', iso_datetime_today)
print("Yesterday ISO Datetime", iso_datetime_yesterday)

# Initial Data Population
url = 'https://services.nvd.nist.gov/rest/json/cves/2.0?startIndex=0'
Headers = {'apiKey': '69e1fdb2-41e3-457e-8f92-f1c6cc22eb64'}
cve_api = requests.get(url, headers=Headers)
cve_data = json.loads(cve_api.content)

startIndex = 0
resultsPerPage = cve_data['resultsPerPage']
print(resultsPerPage)
totalResults = cve_data['totalResults']
print(totalResults)
#print(cve_data['vulnerabilities'][0]['cve'])
#print(type(cve_data['vulnerabilities']))

while startIndex < totalResults:
    startIndexString = str(startIndex)
    url = 'https://services.nvd.nist.gov/rest/json/cves/2.0?startIndex=' + startIndexString
    Headers = {'apiKey': '69e1fdb2-41e3-457e-8f92-f1c6cc22eb64'}
    cve_api = requests.get(url, headers=Headers)
    startIndex = startIndex + resultsPerPage
'''
    cve_new_data = json.loads(cve_api.content)

    i = 0
    while i < resultsPerPage:
        cve_data['vulnerabilities'].append(cve_new_data['vulnerabilities'][i]['cve'])
        i = i + 1
'''
with open(f"cve-data.json", "w") as outfile:
    json.dump(cve_data, outfile, indent = 2)


# Maintaining Data
url = "https://services.nvd.nist.gov/rest/json/cves/2.0/?lastModStartDate=" + iso_datetime_today + "&" + "lastModEndDate=" + iso_datetime_yesterday
print(url)
parameters = {'apiKey': '69e1fdb2-41e3-457e-8f92-f1c6cc22eb64'}
cve_api = requests.get(url, params=parameters)
print(cve_api.text)


# Full list of CVEs
# cve_api = requests.get('https://cve.circl.lu/api/last')
# cve_data = json.loads(cve_api.content)
# print(cve_API.status_code) # returns 200 means that it is working!
# print(cve_api.text)

# with open(f"cve_data.json", "w") as outfile:
    # json.dump(cve_data, outfile, indent = 2)

cve_data = json.loads(cve_api.content)


with open(f"cve-data.json", "w") as outfile:
    json.dump(cve_data, outfile, indent = 2)
