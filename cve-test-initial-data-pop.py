import requests
import json
from dateutil.relativedelta import relativedelta
from datetime import timedelta, date, datetime
import pytz

today = date.today()
yesterday = today - timedelta(days = 1)
six_months_ago = today + relativedelta(months=-24)

time_us_central = datetime.now(pytz.timezone('US/Central'))
print('US Central DateTime: ', time_us_central)

iso_datetime_today = time_us_central.isoformat()
iso_datetime_yesterday = yesterday.strftime('%Y-%m-%dT%H:%M:%S.%f%z')
iso_datetime_six_months_ago = six_months_ago.isoformat()
iso_datetime_six_months_ago = six_months_ago.strftime('%Y-%m-%dT%H:%M:%S.%f%z')

print('Today ISO Datetime', iso_datetime_today)
print("Yesterday ISO Datetime", iso_datetime_yesterday)
print("Six Months Ago", iso_datetime_six_months_ago)


# Initial Data Population
url = 'https://services.nvd.nist.gov/rest/json/cves/2.0?startIndex=0'
Headers = {'apiKey': '69e1fdb2-41e3-457e-8f92-f1c6cc22eb64'}
cve_api = requests.get(url, headers=Headers)
cve_data = json.loads(cve_api.content)

with open(f"cve-data.json", "w") as outfile:
    json.dump(cve_data, outfile, indent = 2)

resultsPerPage = cve_data['resultsPerPage']
print(resultsPerPage)
totalResults = cve_data['totalResults']
print(totalResults)

new_cve_data = {}
new_cve_data['vulnerabilities'] = []
i = 0
cve_modified_date = cve_data['vulnerabilities'][0]['cve']['lastModified']
print(type(cve_modified_date))
date_obj = datetime.strptime(cve_modified_date, '%Y-%m-%d').date()


cve_modified_date_data = datetime.fromisoformat(cve_modified_date)
print(type(cve_modified_date_data))
mod = datetime.date(cve_modified_date_data)
print(type(mod))
'''
fake_date = "2023-07-11"
new_date = fake_date.date()
print(type(new_date))
'''
print(today)
print(type(today))
print(six_months_ago)
print(type(six_months_ago))


while i < resultsPerPage:
    if cve_modified_date <= today and cve_modified_date >= six_months_ago:
        print(cve_data['vulnerabilities'][i]['cve']['id'])
        new_cve_data['vulnerabilities'][i].append(cve_data['vulnerabilities'][i]['cve'])
    i = i + 1  

#print(cvedata['vulnerabilities'][0]['cve'])
#print(type(cve_data['vulnerabilities']))
#cve_modified_date = cve_data['vulnerabilities'][0]['cve']['lastModified']
#print(cve_modified_date)


with open(f"new-cve-data.json", "w") as outfile:
    json.dump(new_cve_data, outfile, indent = 2)

# Finding CVEs that have been updated in the last 6 months
# greater than 6 months ago and less than or equal to today (tomorrow?)
i = 0
startIndex = 0
while startIndex < totalResults:
    cve_modified_date = cve_data['vulnerabilities'][i]['cve']['lastModified']
    if cve_modified_date >= iso_datetime_six_months_ago and cve_modified_date <= iso_datetime_today:
        print(cve_data['vulnerabilities'][i]['cve']['id'])
        cve_new_data['vulnerabilities'][i].append(cve_data['vulnerabilities'][i]['cve'])
        

    startIndexString = str(startIndex)
    url = 'https://services.nvd.nist.gov/rest/json/cves/2.0?startIndex=' + startIndexString
    Headers = {'apiKey': '69e1fdb2-41e3-457e-8f92-f1c6cc22eb64'}
    cve_api = requests.get(url, headers=Headers)
    startIndex = startIndex + resultsPerPage

    cve_new_data = json.loads(cve_api.content)


with open(f"cve-new-data.json", "w") as outfile:
    json.dump(cve_new_data, outfile, indent = 2)