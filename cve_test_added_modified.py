import requests
import json
from datetime import date, datetime, timedelta
from dateutil.relativedelta import relativedelta
'''
test = cve_data['vulnerabilities'][0]['cve']
print(test)
cve_keys_to_remove = ['sourceIdentifier', 'cisaExploitAdd', 'cisaActionDue']
for key in cve_keys_to_remove:
    test.pop(key, None)
del test['descriptions'][0]['lang']
del test['descriptions'][1]['lang']
del test['weaknesses']
del test['configurations']
del test['references']
del test['metrics']['cvssMetricV2'][0]['source']
#del test['metrics']['cvssMetricV2'][0]['metric']
#del test['metrics']['cvssMetricV2']['type']

# for key in keys:
 #   test['metrics']['cvssMetricV2'][0].pop(key, None)


with open(f"testing.json", "w") as outfile:
    json.dump(test, outfile, indent = 2)

'''
def cveFiltering(cve_data, newest, severity, vendor):
    #cve_data = updateCVE()

    # Finding Today's Date
    todays_date = datetime.today()
    #todays_date_string = todays_date.strftime("%Y-%m-%d")
    print("Today's Date:" , todays_date)
    #str(todays_date)

    length_cve_data = len(cve_data['vulnerabilities'])
    print(length_cve_data)

    added_today_dict = {}
    added_today_dict['addedToday'] = []

    # ADDED TODAY

    # Converts the due date string into a date type with format YYYY-MM-DD
    
    
    # Add date has to be less than today and greater than 1 week from today
    i = 0

    while i < length_cve_data:
        cve_add_date_datatype = cve_data['vulnerabilities'][i]['cve']['lastModified']
        cve_add_date_string = cve_add_date_datatype[:10]
        cve_add_date_datetime = datetime.strptime(cve_add_date_string, "%Y-%m-%d")
        if cve_add_date_datetime == todays_date:
            added_today_dict['addedToday'].append(cve_data['vulnerabilities'][i])
        i = i + 1
    
    with open(f"cve_added_today_dict.json", "w") as outfile:
        json.dump(added_today_dict, outfile, indent = 2)

    return added_today_dict


def cisaFiltering(cisa_data, newest, severity, vendor):
    #cve_data = updateCVE()
    # Finding Today's Date
    
    todays_date = datetime.today()
    todays_date_string = todays_date.strftime("%Y-%m-%d")
    #print("Today's Date:" , todays_date_string)
    
    week_before_date = todays_date - timedelta(weeks = 1) 

    length_cve_data = len(cve_data['vulnerabilities'])

    add_in_week_dict = {}
    add_in_week_dict['recentlyAdded'] = []

    # Anything after this time can be added
    if newest == "Today":
        start_date= 


    # while i in data
    if time > start_date: # checks time match (time will be true if)
        if user = High and data == HIGH
            matches severity = true
        if user = med and data = MED
            matches severity = true
        if user = Low and data == LOW
            matches severity = True
        
        time_boolean = True

        if vendor == data[vendor] or vendor == all:
            vendor_bool = true

        if all 3 are true: 
            then add to dictionary


    # Add date has to be less than today and greater than 1 week from today

    # Converts the due date string into a date type with format YYYY-MM-DD

    # Add date has to be less than today and greater than 1 week from today
    i = 0
   
    print(todays_date)
    print(week_before_date)
    print(type(todays_date))
    print(type(week_before_date))

    while i < length_cve_data:
        cve_add_date_datatype = cve_data['vulnerabilities'][i]['cve']['lastModified']
        print(cve_add_date_datatype)
        cve_add_date_string = cve_add_date_datatype[:10]
        cve_add_date_datetime = datetime.strptime(cve_add_date_string, "%Y-%m-%d")
        if cve_add_date_datetime <= todays_date and cve_add_date_datetime >= week_before_date:
            add_in_week_dict['recentlyAdded'].append(cve_data['vulnerabilities'][i])
        i = i + 1

    with open(f"cve_week_added_dict.json", "w") as outfile:
        json.dump(add_in_week_dict, outfile, indent = 2)

    return add_in_week_dict


def cveModifiedOneMonth(cve_data):
    #cve_data = updateCVE()

    # Finding Today's Date
    todays_date = datetime.today()
    todays_date_string = todays_date.strftime("%Y-%m-%d")
    print("Today's Date:" , todays_date_string)
    str(todays_date)
    
    month_before_date = todays_date - relativedelta(months=1) 
    print("Month before date: ", month_before_date)

    length_cve_data = len(cve_data['vulnerabilities'])
    print(length_cve_data)

    add_in_month_dict = {}
    add_in_month_dict['recentlyAdded'] = []

    # ADDED IN THE LAST MONTH

    # Add date has to be less than today and greater than 1 month from today

    # Converts the due date string into a date type with format YYYY-MM-DD

    
    # Add date has to be less than today and greater than 1 week from today
    i = 0

    while i < length_cve_data:
        cve_add_date_datetype = cve_data['vulnerabilities'][i]['cve']['lastModified']
        cve_add_date_string = cve_add_date_datetype[:10]
        cve_add_date_datetime = datetime.strptime(cve_add_date_string, "%Y-%m-%d")
        if cve_add_date_datetime <= todays_date and cve_add_date_datetime >= month_before_date:
            add_in_month_dict['recentlyAdded'].append(cve_data['vulnerabilities'][i])
        i = i + 1

    with open(f"cve_month_added_dict.json", "w") as outfile:
        json.dump(add_in_month_dict, outfile, indent = 2)

    return add_in_month_dict
