import requests
import json
from datetime import datetime
from datetime import date 
from datetime import timedelta
from dateutil.relativedelta import relativedelta
from key_variable import Headers

def updateCVE():
    today = date.today()
    yesterday = today - timedelta(days = 1)
    one_month_ago = today + relativedelta(months=-1)

    iso_datetime_today = today.strftime('%Y-%m-%dT%H:%M:%S.%f%z')
    iso_datetime_yesterday = yesterday.strftime('%Y-%m-%dT%H:%M:%S.%f%z')
    iso_datetime_month_ago = one_month_ago.strftime('%Y-%m-%dT%H:%M:%S.%f%z')
    
    #print('Today ISO Datetime', iso_datetime_today)
    #print("Yesterday ISO Datetime", iso_datetime_yesterday)
    #print("1 Month Ago", iso_datetime_month_ago)

    startIndex = 0
    startIndexString = str(startIndex)

    # CVE DATA PULL
    url = "https://services.nvd.nist.gov/rest/json/cves/2.0/?lastModStartDate=" + iso_datetime_month_ago + "&" + "lastModEndDate=" + iso_datetime_today + "&startIndex=" + startIndexString
    #print(url)
    cve_api = requests.get(url, headers=Headers)
    cve_data = json.loads(cve_api.content)

    resultsPerPage = cve_data['resultsPerPage']
    totalResults = cve_data['totalResults']

    cve_data_full = {}
    cve_data_full['vulnerabilities'] = cve_data['vulnerabilities']

    while startIndex < totalResults:
        startIndexString = str(startIndex)
        url = "https://services.nvd.nist.gov/rest/json/cves/2.0/?lastModStartDate=" + iso_datetime_month_ago + "&" + "lastModEndDate=" + iso_datetime_today + "&startIndex=" + startIndexString
        cve_api = requests.get(url, headers=Headers)
        cve_new_data = json.loads(cve_api.content)
        cve_data_full = {**cve_new_data, **cve_data_full}
        startIndex = startIndex + resultsPerPage
    
    keys_to_remove = ['sourceIdentifier', 'cisaExploitAdd', 'cisaActionDue']
    for i in cve_data_full['vulnerabilities']:
        for key in keys_to_remove:
            i.pop(key, None)
    
    #del cve_data_full['cve']['descriptions'][0]['lang']
    #del cve_data_full['descriptions'][1]['lang']
    #del cve_data_full['weaknesses']
    #del cve_data_full['configurations']
    #del cve_data_full['references']
    #del cve_data_full['metrics']['cvssMetricV2'][0]['source']

    with open(f"cve-data-full.json", "w") as outfile:
        json.dump(cve_data_full, outfile, indent = 2)
    
    return cve_data_full
'''
    for i in cve_data_full['vulnerabilities']:
        last_mod_date = i['cve']['lastModified']
        last_mod_date_string = last_mod_date[:10]
        last_mod_date_object = datetime.strptime(last_mod_date_string, "%Y-%m-%d").date()
'''
    
def updateCISA():
    # CISA DATA PULL
    cisa_api = requests.get('https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json')
    cisa_data = json.loads(cisa_api.content)

    keys_to_remove = ['dueDate', 'knownRansomwareCampaignUse', 'notes']
    for i in cisa_data['vulnerabilities']:
        for key in keys_to_remove:
            i.pop(key, None)

    with open(f"cisa-data-full.json", "w") as outfile:
        json.dump(cisa_data, outfile, indent = 2)

    return cisa_data
'''
# PUTTING DATA IN SINGLE JSON FILE
all_data = {}
all_data['vulnerabilities'] = cve_data_full['vulnerabilities']

all_data['vulnerabilities'] = cve_data_full['vulnerabilities'] + cisa_data['vulnerabilities']

with open(f"all-data.json", "w") as outfile:
    json.dump(all_data, outfile, indent = 2)

print(len(all_data['vulnerabilities']))
'''